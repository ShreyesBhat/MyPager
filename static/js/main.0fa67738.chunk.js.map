{"version":3,"sources":["components/MyMessage.js","components/TheirMessage.js","components/MessageForm.js","components/ChatFeed.js","components/LoginForm.js","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","backgroundSize","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","console","log","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fa67738.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","import React from 'react'\r\n\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{\r\n            backgroundImage: message.sender && `url(${message.sender.avatar})`,\r\n          }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#CABCDC\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import React from 'react'\r\n\r\nimport { useState } from \"react\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(() => event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from 'react'\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\nimport MessageForm from \"./MessageForm\";\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n    \r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) =>\r\n      chat.people.map(\r\n        (person, index) =>\r\n          person.last_read === message.id && (\r\n            <div\r\n              key={`read_${index}`}\r\n              className=\"read-receipt\"\r\n              style={{\r\n                float: isMyMessage ? \"right\" : \"left\",\r\n                backgroundImage:\r\n                      person.person.avatar && `url(${person.person.avatar})`,\r\n                  backgroundSize: \"2em\",\r\n              }}\r\n            />\r\n          )\r\n      );\r\n\r\n    const renderMessages = () => {\r\n      const keys = Object.keys(messages);\r\n\r\n      return keys.map((key, index) => {\r\n        const message = messages[key];\r\n        const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n        const isMyMessage = userName === message.sender.username;\r\n\r\n        return (\r\n          <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n            <div className=\"message-block\">\r\n              {isMyMessage ? (\r\n                <MyMessage message={message} />\r\n              ) : (\r\n                <TheirMessage\r\n                  message={message}\r\n                  lastMessage={messages[lastMessageKey]}\r\n                />\r\n              )}\r\n            </div>\r\n            <div\r\n              className=\"read-receipts\"\r\n              style={{\r\n                marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n                marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n              }}\r\n            >\r\n              {renderReadReceipts(message, isMyMessage)}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatFeed\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst projectID = \"9ac4ba9f-fade-4e2f-866e-200bc7686ae2\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": projectID,\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n      };\r\n      console.log(username, password);\r\n\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Oops, incorrect credentials.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { ChatEngine } from \"react-chat-engine\";\n\nimport ChatFeed from \"./components/ChatFeed\";\nimport LoginForm from \"./components/LoginForm\";\nimport \"./App.css\";\n\nfunction App() {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n\n  const projectID = \"9ac4ba9f-fade-4e2f-866e-200bc7686ae2\";\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID={projectID}\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() =>\n        new Audio(\n          \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\n        ).play()\n      }\n    />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}